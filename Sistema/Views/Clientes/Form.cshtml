@model Sistema.Models.Clientes
@using Sistema.Util
@{
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string action = Convert.ToString(ViewBag.Action);
}

@if (action != "create")
{
    @Html.HiddenFor(model => model.codCliente)
    <div class="form-row">
        <div class="@Util.Input2">
            @Html.LabelFor(model => model.codCliente)
            @Html.TextBoxFor(model => model.codCliente, new { @class = "form-control", disabled = false })
        </div>
    </div>
}

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.tipo, new { @class = "required" })
        @Html.DropDownListFor(model => model.tipo, Sistema.Models.Clientes.Tipo, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.tipo, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.situacao, new { @class = "required" })
        @Html.DropDownListFor(model => model.situacao, Sistema.Models.Clientes.Situacao, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.situacao, null, new { @class = "text-danger" })
    </div>

</div>

<div class="form-row">
    <div class="@Util.Input9">
        @Html.LabelFor(model => model.nomeCliente, new { @class = "required" })
        @Html.TextBoxFor(model => model.nomeCliente, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.nomeCliente, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.sexo, new { @class = "required" })
        @Html.DropDownListFor(model => model.sexo, Sistema.Models.Clientes.Sexo, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.sexo, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input4">
        @Html.LabelFor(model => model.dsLogradouro, new { @class = "required" })
        @Html.TextBoxFor(model => model.dsLogradouro, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.dsLogradouro, null, new { @class = "text-danger" })
    </div>
    <div class="@Util.Input1">
        @Html.LabelFor(model => model.numero, new { @class = "required" })
        @Html.TextBoxFor(model => model.numero, new { @class = "form-control", maxlength = "8", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.numero, null, new { @class = "text-danger" })
    </div>
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.complemento, new { @class = "required" })
        @Html.TextBoxFor(model => model.complemento, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.complemento, null, new { @class = "text-danger" })
    </div>
    <div class="@Util.Input4">
        @Html.LabelFor(model => model.bairro, new { @class = "required" })
        @Html.TextBoxFor(model => model.bairro, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.bairro, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input4">
        @Html.LabelFor(model => model.telefoneFixo, new { @class = "required" })
        @Html.TextBoxFor(model => model.telefoneFixo, new { @class = "form-control", maxlength = "10", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.telefoneFixo, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input4">
        @Html.LabelFor(model => model.telefoneCelular, new { @class = "required" })
        @Html.TextBoxFor(model => model.telefoneCelular, new { @class = "form-control", maxlength = "11", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.telefoneCelular, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input4">
        @Html.LabelFor(model => model.email, new { @class = "required" })
        @Html.TextBoxFor(model => model.email, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.email, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <p class="@Util.Input9"> Cidade </p>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.cep, new { @class = "required" })
        @Html.TextBoxFor(model => model.cep, new { @class = "form-control", maxlength = "8", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.cep, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.cpfCNPJ, new { @class = "required" })
        @Html.TextBoxFor(model => model.cpfCNPJ, new { @class = "form-control", maxlength = "15", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.cpfCNPJ, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.rgIE, new { @class = "required" })
        @Html.TextBoxFor(model => model.rgIE, new { @class = "form-control", maxlength = "15", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.rgIE, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.dtNascimento)
        <div class="input-group-append">
            @Html.TextBoxFor(model => model.dtNascimento, new { @class = "form-control datepicker", disabled = true })
            <span class="fa fa-calendar input-group-text" style="font-size:23px"></span>
        </div>
    </div>
</div>

<p> condicao de pagamento</p>

<script type="text/javascript">
    $(document).ready(function () {
        $.fn.datepicker.dates['en'] = {
            days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado", "Domingo"],
            daysShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb", "Dom"],
            daysMin: ["Do", "Se", "Te", "Qu", "Qu", "Se", "Sa", "Do"],
            months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
            monthsShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
            today: "Hoje",
            clear: "Limpar",
            titleFormat: "MM yyyy",
            weekStart: 0
        };

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            lacale: 'en',
            clearBtn: true,
        });
    });

</script>