@model Sistema.Models.Paises
@using Sistema.Util
@{
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string action = Convert.ToString(ViewBag.Action);
}

@if (action != "create")
{
    @Html.HiddenFor(model => model.codPais)
    <div class="form-row" style="">
        <div class="@Util.Input2">
            @Html.LabelFor(model => model.codPais)
            @Html.TextBoxFor(model => model.codPais, new { @class = "form-control", disabled = true })
        </div>
    </div>
}

<div class="form-row">
    <div class="@Util.Input6">
        @Html.LabelFor(model => model.nomePais, new { @class = "required" })
        @Html.TextBoxFor(model => model.nomePais, new { @class = "form-control", maxlength = "50", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.nomePais, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.DDI, new { @class = "required" })
        @Html.TextBoxFor(model => model.DDI, new { @class = "form-control", @maxlength = "5", style = "text-transform:uppercase" })
        @Html.ValidationMessageFor(model => model.DDI, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.sigla, new { @class = "required" })
        @Html.TextBoxFor(model => model.sigla, new { @class = "form-control", @maxlength = "2", style = "text-transform:uppercase" })
        @Html.ValidationMessageFor(model => model.sigla, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    @Html.EditorFor(model => model.Pais, "Paises/Select", new { disabled = false })
</div>

@if (action != "create") { 
<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.dtCadastro)
        <div class="input-group-append">
            @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control datepicker", disabled = true@*, @Value = Model.dtCadastro.Value.ToString("dd/MM/yyyy")*@})
            <span class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></span>
        </div>
    </div>

    <div class="@Util.Input3 ">
        @Html.LabelFor(model => model.dtUltAlteracao)
        <div class="input-group">
            @Html.TextBoxFor(model => model.dtUltAlteracao, new { @class = "form-control datepicker", disabled = true@*@Value = Model.dtUltAlteracao != null ? Model.dtUltAlteracao.Value.ToString("dd/MM/yyyy") : Model.dtUltAlteracao.Value.ToString("")*@})
            <div class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></div>
        </div>
    </div>
</div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $.fn.datepicker.dates['en'] = {
            days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado", "Domingo"],
            daysShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb", "Dom"],
            daysMin: ["Do", "Se", "Te", "Qu", "Qu", "Se", "Sa", "Do"],
            months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
            monthsShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
            today: "Hoje",
            clear: "Limpar",
            titleFormat: "MM yyyy",
            weekStart: 0
        };

        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            lacale: 'en',
            clearBtn: true,
        });
    });

</script>